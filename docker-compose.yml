---
  version: '2.4'
  services:
    zookeeper:
      image: confluentinc/cp-zookeeper:5.5.1
      expose:
        - 32181
      ports:
        - 32181:32181
      environment:
        ZOOKEEPER_CLIENT_PORT: 32181
        ZOOKEEPER_TICK_TIME: 2000
      extra_hosts:
        - "moby:127.0.0.1"
  
    kafka:
      image: confluentinc/cp-kafka:5.5.1
      container_name: kafka
      hostname: kafka
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
      environment:
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:32181"
        KAFKA_BROKER_ID: 1
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      extra_hosts:
        - "moby:127.0.0.1"
  
    mosquitto:
      image: eclipse-mosquitto:1.5.5
      hostname: mosquitto
      container_name: mosquitto
      expose:
        - "1883"
      ports:
        - "1883:1883"

    # elastic:
    #   image: elasticsearch:7.6.2
    #   hostname: elastic
    #   container_name: elastic
    #   ports:
    #     - "9200:9200"
    #     - "9300:9300"
    #   environment:
    #     discovery.type: single-node
  
    kafka-connect:
      image: confluentinc/cp-kafka-connect-base:5.5.1
      depends_on:
        - kafka
      container_name: kafka-connect
      ports:
        - 8083:8083
      environment:
        CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
        CONNECT_REST_ADVERTISED_HOST_NAME: connect
        CONNECT_REST_PORT: 8083
        CONNECT_GROUP_ID: compose-connect-group
        CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
        CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
        CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
        CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
        CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
        CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
        CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
        CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
        CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
        CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
        CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
  
    mongo-db:
      image: mongo:4.0.5
      hostname: mongo-db
      container_name: mongo-db
      expose:
        - "27017"
      ports:
        - "27017:27017"
      command: --bind_ip_all --smallfiles
    mongoclient:
      image: mongoclient/mongoclient:2.2.0
      container_name: mongoclient
      hostname: mongoclient
      depends_on:
        - mongo-db
      ports:
        - 3000:3000
      environment:
        MONGO_URL: "mongodb://mongo-db:27017"
        PORT: 3000
      expose:
        - "3000"

    schema-registry:
      image: confluentinc/cp-schema-registry:5.5.1
      hostname: schema-registry
      container_name: schema-registry
      depends_on:
        - zookeeper
        - kafka
      ports:
        - "8081:8081"
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:32181'
  
    ksqldb-server:
      image: confluentinc/ksqldb-server:0.18.0
      hostname: ksqldb-server
      container_name: ksqldb-server
      depends_on:
        - kafka
        - schema-registry
      ports:
        - "8088:8088"
      volumes:
        - "./confluent-hub-components/:/usr/share/kafka/plugins/"
      environment:
        KSQL_LISTENERS: "http://0.0.0.0:8088"
        KSQL_BOOTSTRAP_SERVERS: "kafka:9092"
        KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
        KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
        KSQL_CONNECT_GROUP_ID: "ksql-connect-cluster"
        KSQL_CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
        KSQL_CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
        KSQL_CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
        KSQL_CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        KSQL_CONNECT_CONFIG_STORAGE_TOPIC: "_ksql-connect-configs"
        KSQL_CONNECT_OFFSET_STORAGE_TOPIC: "_ksql-connect-offsets"
        KSQL_CONNECT_STATUS_STORAGE_TOPIC: "_ksql-connect-statuses"
        KSQL_CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
        KSQL_CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
        KSQL_CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
        KSQL_CONNECT_PLUGIN_PATH: "/usr/share/kafka/plugins"
  
    ksqldb-cli:
      image: confluentinc/ksqldb-cli:0.18.0
      container_name: ksqldb-cli
      depends_on:
        - kafka
        - ksqldb-server
      entrypoint: /bin/sh
      tty: true
  
    iot:
      build:
        context: ./trying-iot
      depends_on:
        - kafka
        - kafka-connect
        - mosquitto
        - mongo-db
      environment:
        SPRING_APPLICATION_JSON: '{"mqtt": {"url": "tcp://mosquitto:1883"}}'
  
    big-data:
      build:
        context: ./trying-big-data
      container_name: big-data
      depends_on:
        - mongo-db
      ports:
        - 8080:8080
      expose:
        - "8080"
      environment:
        SPRING_APPLICATION_JSON: '{"spring": {"data": {"mongodb": {"host": "mongo-db"}}}, "mqtt": {"url": "tcp://mosquitto:1883"}}'